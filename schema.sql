USE OLIST;

DROP TABLE IF EXISTS [dbo].[TB_ACT_ORDER_REVIEW];
DROP TABLE IF EXISTS [dbo].[TB_ACT_ORDER_PAYMENT];
DROP TABLE IF EXISTS [dbo].[TB_ACT_ORDER_ITEMS];
DROP TABLE IF EXISTS [dbo].[TB_ACT_ORDER];
DROP TABLE IF EXISTS [dbo].[TB_ACT_PRODUCT];
DROP TABLE IF EXISTS [dbo].[TB_ACT_CUSTOMER];
DROP TABLE IF EXISTS [dbo].[TB_ACT_SELLER];
DROP TABLE IF EXISTS [dbo].[TB_ACT_GEOLOCATION];

CREATE TABLE dbo.TB_ACT_GEOLOCATION (
	ZIP_CODE_PREFIX			INT,
	GEO_LAT					FLOAT,
	GEO_LNG					FLOAT,
	GEO_CITY				VARCHAR(70),
	GEO_STATE				CHAR(2)
);

CREATE TABLE dbo.TB_ACT_CUSTOMER (
	ID						VARCHAR(150),
	UNIQUE_ID				VARCHAR(150),
	ZIP_CODE_PREFIX			INT,
	CITY					VARCHAR(70),
	STATE					CHAR(2),

	PRIMARY KEY (ID)
);

CREATE TABLE dbo.TB_ACT_SELLER (
	ID						VARCHAR(150),
	ZIP_CODE_PREFIX			INT,
	CITY					VARCHAR(70),
	STATE					CHAR(2),

	PRIMARY KEY (ID)
);

CREATE TABLE dbo.TB_ACT_PRODUCT (
	ID						VARCHAR(150),
	CATEGORY_NAME			VARCHAR(100),
	WEIGHT_G				INT NULL,
	LENGTH_CM				INT NULL,
	HEIGHT_CM				INT NULL,
	WIDTH_CM				INT NULL,

	PRIMARY KEY (ID)
);

CREATE TABLE dbo.TB_ACT_ORDER (
	ID						VARCHAR(150),
	CUSTOMER				VARCHAR(150),
	STATUS					VARCHAR(40),
	PURCHASE_TIMESTAMP		DATETIME2,
	APPROVED_AT				DATETIME2 NULL,
	DELIVERED_CARRIER_DATE	DATETIME2 NULL,
	DELIVERED_CUSTOMER_DATE	DATETIME2 NULL,
	ESTIMATED_DELIVERY_DATE	DATETIME2 NULL,

	PRIMARY KEY (ID),
	FOREIGN KEY (CUSTOMER) REFERENCES dbo.TB_ACT_CUSTOMER(ID)
);

CREATE TABLE dbo.TB_ACT_ORDER_ITEMS (
	ORDER_ID					VARCHAR(150),
	PRODUCT_ID					VARCHAR(150),
	SELLER_ID					VARCHAR(150),
	ORDER_ITEM_ID				INT,
	SHIPPING_LIMIT_DATE			DATETIME2,
	PRICE						FLOAT,
	FREIGHT_VALUE				FLOAT,

	FOREIGN KEY (ORDER_ID) REFERENCES dbo.TB_ACT_ORDER(ID),
	FOREIGN KEY (PRODUCT_ID) REFERENCES dbo.TB_ACT_PRODUCT(ID),
	FOREIGN KEY (SELLER_ID) REFERENCES dbo.TB_ACT_SELLER(ID)
);

CREATE TABLE dbo.TB_ACT_ORDER_PAYMENT (
	ORDER_ID					VARCHAR(150),
	PAYMENT_SEQUENTIAL			INT,
	PAYMENT_TYPE				VARCHAR(40),
	INSTALLMENTS				INT,
	PAYMENT_VALUE				FLOAT,

	FOREIGN KEY (ORDER_ID) REFERENCES dbo.TB_ACT_ORDER(ID)
);

CREATE TABLE dbo.TB_ACT_ORDER_REVIEW (
	ID							VARCHAR(150),
	ORDER_ID					VARCHAR(150),
	SCORE						INT,
	COMMENT_TITLE				VARCHAR(256) NULL,
	COMMENT_MESSAGE				TEXT NULL,
	CREATION_DATE				DATE,
	ANSWER_TIMESTAMP			DATETIME2,

	PRIMARY KEY (ID, ORDER_ID),
	FOREIGN KEY (ORDER_ID) REFERENCES dbo.TB_ACT_ORDER(ID)
);

INSERT INTO dbo.TB_ACT_GEOLOCATION
SELECT DISTINCT * FROM dbo.TB_CG_GEOLOCATION;

INSERT INTO dbo.TB_ACT_CUSTOMER
SELECT customer_id, customer_unique_id, customer_zip_code_prefix, customer_city, customer_state
FROM dbo.TB_CG_CUSTOMER;

INSERT INTO dbo.TB_ACT_SELLER
SELECT seller_id, seller_zip_code_prefix, seller_city, seller_state
FROM dbo.TB_CG_SELLER;

INSERT INTO dbo.TB_ACT_PRODUCT
SELECT product_id, product_category_name, product_weight_g, product_length_cm, product_height_cm, product_width_cm
FROM dbo.TB_CG_PRODUCT;

INSERT INTO dbo.TB_ACT_ORDER
SELECT order_id, customer_id, order_status, order_purchase_timestamp, order_approved_at, order_delivered_carrier_date, order_delivered_customer_date, order_estimated_delivery_date
FROM dbo.TB_CG_ORDER;

INSERT INTO dbo.TB_ACT_ORDER_ITEMS
SELECT order_id, product_id, seller_id, order_item_id, shipping_limit_date, price, freight_value
FROM dbo.TB_CG_ORDER_ITEMS;

INSERT INTO dbo.TB_ACT_ORDER_PAYMENT
SELECT order_id, payment_sequential, payment_type, payment_installments, payment_value
FROM dbo.TB_CG_ORDER_PAYMENTS;

INSERT INTO dbo.TB_ACT_ORDER_REVIEW
SELECT DISTINCT review_id, order_id, review_score, review_comment_title, review_comment_message, review_creation_date, review_answer_timestamp
FROM dbo.TB_CG_ORDER_REVIEWS;